name: run-test

on:
  push:
    branches: '*'
    tags: '*'
    paths-ignore: '**.md'

  pull_request:
    branches: '*'
    tags: '*'
    paths-ignore: '**.md'

jobs:
  run-test:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [12.x, 14.x, 16.x, 17.x]

    steps:
      - name: Checkout to vrelease-js
        uses: actions/checkout@v3

      - name: Configure git
        run: |
          git config --global user.email "hi@caian.org"
          git config --global user.name "Caian Ertl"

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.2.1
        with:
          version: 6.32.x

      - name: Setup NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v3.1.0
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm

      - name: Cache pnpm store
        id: cache-node-modules
        uses: actions/cache@v3.0.3
        with:
          path: |
            ./node_modules
            ~/.pnpm-store
          key: ${{ env.preffix }}-cache-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ env.preffix }}-cache-${{ env.cache-name }}-
            ${{ env.preffix }}-cache-
            ${{ env.preffix }}-
        env:
          cache-name: run-test
          preffix: ${{ matrix.os }}-node-${{ matrix.node-version }}

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: pnpm i

      - name: Run pre-release steps
        run: pnpm run prerelease

      - name: Build package
        run: |
          pnpm run build:js
          npm pack

      - name: Install vrelease
        run: npm i -g vrelease-bin-*.tgz

      - name: Run vrelease (version)
        run: vrelease -v

      - name: Run vrelease (help)
        run: vrelease -h
